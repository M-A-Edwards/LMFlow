lmflow.utils.conversation_template.gemma
========================================

.. py:module:: lmflow.utils.conversation_template.gemma


Attributes
----------

.. autoapisummary::

   lmflow.utils.conversation_template.gemma.logger
   lmflow.utils.conversation_template.gemma.GEMMA_TEMPLATE
   lmflow.utils.conversation_template.gemma.GEMMA3_TEMPLATE


Classes
-------

.. autoapisummary::

   lmflow.utils.conversation_template.gemma.GemmaConversationTemplate


Module Contents
---------------

.. py:data:: logger

.. py:class:: GemmaConversationTemplate

   Bases: :py:obj:`lmflow.utils.conversation_template.base.ConversationTemplate`


   .. py:method:: encode_conversation(*args, **kwargs)


.. py:data:: GEMMA_TEMPLATE

.. py:data:: GEMMA3_TEMPLATE
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """{{ bos_token }}
      {%- if messages[0]['role'] == 'system' -%}
          {%- if messages[0]['content'] is string -%}
              {%- set first_user_prefix = messages[0]['content'] + '
      
      ' -%}
          {%- else -%}
              {%- set first_user_prefix = messages[0]['content'][0]['text'] + '
      
      ' -%}
          {%- endif -%}
          {%- set loop_messages = messages[1:] -%}
      {%- else -%}
          {%- set first_user_prefix = "" -%}
          {%- set loop_messages = messages -%}
      {%- endif -%}
      {%- for message in loop_messages -%}
          {%- if (message['role'] == 'user') != (loop.index0 % 2 == 0) -%}
              {{ raise_exception("Conversation roles must alternate user/assistant/user/assistant/...") }}
          {%- endif -%}
          {%- if (message['role'] == 'assistant') -%}
              {%- set role = "model" -%}
          {%- else -%}
              {%- set role = message['role'] -%}
          {%- endif -%}
          {{ '<start_of_turn>' + role + '
      ' + (first_user_prefix if loop.first else "") }}
          {%- if (message['role'] == 'assistant') -%}
              {% generation %}
              {%- if message['content'] is string -%}
                  {{ message['content'] | trim }}
              {%- elif message['content'] is iterable -%}
                  {%- for item in message['content'] -%}
                      {%- if item['type'] == 'image' -%}
                          {{ '<start_of_image>' }}
                      {%- elif item['type'] == 'text' -%}
                          {{ item['text'] | trim }}
                      {%- endif -%}
                  {%- endfor -%}
              {%- else -%}
                  {{ raise_exception("Invalid content type") }}
              {%- endif -%}
              {{ '<end_of_turn>
      ' }}
              {% endgeneration %}
          {%- else -%}
              {%- if message['content'] is string -%}
                  {{ message['content'] | trim }}
              {%- elif message['content'] is iterable -%}
                  {%- for item in message['content'] -%}
                      {%- if item['type'] == 'image' -%}
                          {{ '<start_of_image>' }}
                      {%- elif item['type'] == 'text' -%}
                          {{ item['text'] | trim }}
                      {%- endif -%}
                  {%- endfor -%}
              {%- else -%}
                  {{ raise_exception("Invalid content type") }}
              {%- endif -%}
              {{ '<end_of_turn>
      ' }}
          {%- endif -%}
      {%- endfor -%}
      {%- if add_generation_prompt -%}
          {{'<start_of_turn>model
      '}}
      {%- endif -%}
      """

   .. raw:: html

      </details>



